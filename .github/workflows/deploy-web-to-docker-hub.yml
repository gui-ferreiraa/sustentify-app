name: Deploy Web to Docker Hub

on: 
  push: 
    paths: 
      - 'services/web/**'
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build-main:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: docker-hub-web
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: Install dependencies
        run: npm install
        working-directory: ./services/web

      - name: Install Angular CLI
        run: npm install -g @angular/cli
        working-directory: ./services/web

      - name: Build app (production)
        run: npm run build:prod
        working-directory: ./services/web

  deploy-docker-hub-latest:
    environment: docker-hub-web
    env:
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
      DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
      DOCKER_HUB_PROJECT_NAME: ${{ secrets.DOCKER_HUB_PROJECT_NAME }}
      API_BASE_URL: ${{ secrets.API_BASE_URL }}
      ASSISTANT_BASE_URL: ${{ secrets.ASSISTANT_BASE_URL }}
      MAKE_REQUEST: ${{ secrets.MAKE_REQUEST }}
    needs: build-main
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4 

      - name: Login Docker Hub
        run: |
          echo ${{ env.DOCKER_HUB_PASSWORD }} | docker login -u ${{ env.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Set environment variables from secrets
        run: |
          echo "NG_SUS_API_BASE_URL=${{ env.API_BASE_URL }}" >> $GITHUB_ENV
          echo "NG_SUS_ASSISTANT_BASE_URL=${{ env.ASSISTANT_BASE_URL }}" >> $GITHUB_ENV
          echo "NG_SUS_APP_VERSION=v1.0.0" >> $GITHUB_ENV
          echo "NG_SUS_MAKE_REQUEST=${{ env.MAKE_REQUEST }}" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          docker build \
          --build-arg NG_SUS_API_BASE_URL=${{ env.API_BASE_URL }} \
          --build-arg NG_SUS_ASSISTANT_BASE_URL=${{ env.ASSISTANT_BASE_URL }} \
          --build-arg NG_SUS_APP_VERSION=v1.0.0 \
          --build-arg NG_SUS_MAKE_REQUEST=${{ env.MAKE_REQUEST }} \
          -t ${{ env.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_HUB_PROJECT_NAME }}:latest ./web

      - name: Push Docker image to Docker Hub
        run: |

          docker push ${{ env.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_HUB_PROJECT_NAME }}:latest

      - name: Logout Docker Hub
        run: |
          docker logout

  build-release-tag:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    environment: docker-hub-web
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: Install dependencies
        run: npm install
        working-directory: ./services/web

      - name: Install Angular CLI
        run: npm install -g @angular/cli
        working-directory: ./services/web

      - name: Build app (production)
        run: npm run build:prod
        working-directory: ./services/web

  deploy-docker-hub-with-tag:
    environment: docker-hub-web
    env:
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
      DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
      DOCKER_HUB_PROJECT_NAME: ${{ secrets.DOCKER_HUB_PROJECT_NAME }}
      API_BASE_URL: ${{ secrets.API_BASE_URL }}
      ASSISTANT_BASE_URL: ${{ secrets.ASSISTANT_BASE_URL }}
      MAKE_REQUEST: ${{ secrets.MAKE_REQUEST }}
    needs: build-release-tag
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4 

      - name: Login Docker Hub
        run: |
          echo ${{ env.DOCKER_HUB_PASSWORD }} | docker login -u ${{ env.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Extract Tag
        id: tag
        uses: aaronbarnaby/get-tag@v1.2.0
        with:
          without_prefix_v: true # Remove prefix `v` from tag
        
      - name: Set Git Tag Name
        run: echo "GIT_TAG_NAME=${{ steps.tag.outputs.tag }}" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          docker build \
            --build-arg NG_SUS_API_BASE_URL=${{ env.API_BASE_URL }} \
            --build-arg NG_SUS_ASSISTANT_BASE_URL=${{ env.ASSISTANT_BASE_URL }} \
            --build-arg NG_SUS_APP_VERSION=v1.0.0 \
            --build-arg NG_SUS_MAKE_REQUEST=${{ env.MAKE_REQUEST }} \
            -t ${{ env.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_HUB_PROJECT_NAME }}:latest \
            -t ${{ env.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_HUB_PROJECT_NAME }}:$GIT_TAG_NAME \
            ./web

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ env.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_HUB_PROJECT_NAME }}:latest

          docker push ${{ env.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_HUB_PROJECT_NAME }}:$GIT_TAG_NAME

      - name: Logout Docker Hub
        run: |
          docker logout